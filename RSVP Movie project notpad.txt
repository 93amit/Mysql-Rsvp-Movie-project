create database inter_challenge;
use inter_challenge;
select * from movies;
select * from names;
select * from director_mapping;
select * from genre;
select * from ratings;
select * from role_mapping;

-- Q1. Find the total number of rows in each table of the schema?

select count(*) as total_rows from movies;
-- Ans ==> Total rows in movie table = 7997

select count(*) as total_rows from names;
-- Ans ==> Total rows in names table = 8400

select count(*) as total_rows from ratings;
-- Ans ==> Total rows in ratings table = 7997

select count(*) as total_rows from role_mapping ;
-- Ans ==> Total rows in role_mapping table = 15615

select count(*) as total_rows from genre;
-- Ans ==> Total rows in genre table = 14662

select count(*) as total_rows from director_mapping;
-- Ans ==> Total rows in director_mapping table = 3867
-----------------------------------------------------------------------------------------
-- Q2. Which columns in the movie table have null values?

Select 
		SUM(case when id is null then 1 else 0 end) as ID_nulls, 
		SUM(case when title is null then 1 else 0 end) as title_nulls, 
		SUM(case when year is null then 1 else 0 end) as year_nulls,
		SUM(case when date_published is null then 1 else 0 end) as date_published_nulls,
		SUM(case when duration is null then 1 else 0 end) as duration_nulls,
		SUM(case when country is null then 1 else 0 end) as country_nulls,
		SUM(case when worlwide_gross_income is null then 1 else 0 end) as worlwide_gross_income_nulls,
		SUM(case when languages is null then 1 else 0 end) as languages_nulls,
		SUM(case when production_company is null then 1 else 0 end) as production_company_nulls

from movies;

#select count(*) from movies where worlwide_gross_income is null ;
------------------------------------------------------------------------------------------------------
# Q3. Find the total number of movies released each year? How does the trend look month wise? 

select 
year,
count(title)as movie_count
from movies	
group by 1;

 -- count of movie month wise
 select 
 MONTH(date_published) as month_number,
 count(title) as movie_count
 from movies
 group by month_number
 order by 1 ;
 -----------------------------------------------------------------------------------------------------
 # Q4. How many movies were produced in the USA or India in the year 2019??
  select year,
 count(title) as movie_count
 from movies
 where year= '2019' and (country like '%India%' or country like '%USA%') ;
-------------------------------------------------------------------------------------------------------
# Q5. Find the unique list of the genres present in the data set?

select distinct(genre) 
from genre;
-------------------------------------------------------------------------------------------------------
# Q6. Which genre had the highest number of movies produced overall?
 -- Ans ==> 4285

select distinct genre,
count(genre) as movie_sum 
from genre
group by 1
order by  2 desc
limit 1;
# OR
select 
    genre, COUNT(m.id) AS number_of_movies
from
    movies AS m
        inner join
    genre AS g
where
    g.movie_id = m.id
group by genre
order by number_of_movies desc
limit 1;
----------------------------------------------------------------------------------------
# Q7. How many movies belong to only one genre?

 select distinct genre,
 count(genre) as movie_sum 
 from genre
 group by 1
 order by 2 asc;

with movies_one_genre
as (select movie_id
from   genre
group by movie_id
having Count(distinct genre) = 1)
select Count(*) AS movies_one_genre
from   movies_one_genre; 
------------------------------------------------------------------
# Q8. What is the average duration of movies in each genre?

select genre,
avg(duration) from movies as x
join
genre y on x.id=y.movie_id
group by 1;
                         # OR
select genre, round(avg(duration), 2) as avg_duration
from genre as g
inner Join
movies as m on g.movie_id = m.id
group by genre
order by avg(duration) desc;

------------------------------------------------------------------------------------------------------------------

# Q9. What is the rank of the ‘thriller’ genre of movies among all the genres in terms of number of movies produced?
with genre_rank as
( select genre,
  count(genre) as movie_count,
  rank() over(order by count(movie_id) desc) as genre_rank
  from genre
  group by 1
)
select * from genre_rank
where genre="thriller";
 -------------------------------------------------------------------------------------------------------
 #Q10. Find the minimum and maximum values in each column of the ratings table except the movie_id column?
 
select * from ratings;
alter table ratings drop column Column1;     # it just clean ratings table by droping column1
select * from ratings;

select 
      min(avg_rating)as min_avg_rating,
      max(avg_rating)as max_avg_rating,
      min(total_votes)as min_total_votes,
      max(total_votes)as max_total_votes,
      min(median_rating)as min_median_rating,
      max(median_rating)as max_median_rating
from ratings;
-----------------------------------------------------------------------------------      
-- Q11. Which are the top 10 movies based on average rating?
select * from ratings;

select 
title,
avg_rating,
rank() over(order by  avg_rating desc) as movie_rank 
from ratings x
join 
movies y on x.movie_id=y.id 
limit 10;
-------------------------------------------------------------------------------
-- Q12. Summarise the ratings table based on the movie counts by median ratings.

select median_rating,
count(movie_id) as movie_count
from ratings x
join 
movies y on x.movie_id=y.id
group by 1
order by 1;
----------------------------------------------------------------------------------------------
# Q13. Which production house has produced the most number of hit movies (average rating > 8)??
select * from movies;
select 
production_company, COUNT(id) AS movie_count,
dense_rank() OVER(ORDER BY COUNT(id) DESC) AS prod_company_rank
from movies a
join ratings b on a.id = b.movie_id
where avg_rating > 8 and production_company is not null
group by production_company
ORDER BY movie_count desc;
----------------------------------------------------------------------------------------------
# Q14. How many movies released in each genre during March 2017 in the USA had more than 1,000 votes?
 
 select genre, count(a.id) as movie_count 
 from movies as a
 join genre b on a.id=b.movie_id
 join ratings c on a.id = c.movie_id
 where year = '2017'
 and month(date_published) = 3
 and country like '%USA%'
 and total_votes > 1000
 group by 1
 order by movie_count desc;
 
-- Q15. Find movies of each genre that start with the word ‘The’ and which have an average rating > 8?

select title, genre, avg_rating 
 from movies a
join genre b on a.id = b.movie_id
join ratings c on a.id = c.movie_id
where title  like 'The%'
and avg_rating > 8
order by avg_rating desc;
-------------------------------------------------------------------------------------------------------------

-- Q16. Of the movies released between 1 April 2018 and 1 April 2019, how many were given a median rating of 8?

select a.date_published, b.median_rating, count(movie_id) as movie_count
from movies a
 join ratings b on a.id = b.movie_id
 where b.median_rating > 8
 and a.date_published between '2018-04-01' and '2019-04-01'
 group by 1,2;

 -----------------------------------------------------------
-- Q17. Do German movies get more votes than Italian movies? 
-- Ans ==>  Yes
select country, sum(total_votes) as total_votes
from movies a
join ratings b on a.id = b.movie_id
where country ='Germany' or country='Italy'
group by country;

------------------------------------------------------------
-- Q18. Which columns in the names table have null values??
select * from names;
select 
(select count(*) from names where known_for_movies is null) as kfm
from names;
select 
 sum(case when known_for_movies is null then 1 else 0 end ) as kfm
from names;
                        # OR
select 
sum(case when name is null then 1 else 0 end ) as name_null,
sum(case when height is null then 1 else 0 end) as hight_null,
sum(case when date_of_birth is null then 1 else 0 end ) as date_of_birth_null,
sum(case when Known_for_movies is null then 1 else 0 end )as kfm_null
from names;
-------------------------------------------------------------
# Q19. Who are the top three directors in the top three genres whose movies have an average rating > 8?

select production_company as Director, avg_rating, genre,count(a.id) as movie_count 
from  movies a
join genre b on a.id = b.movie_id
join ratings c on a.id = c.movie_id
where avg_rating > 8 
group by 1,2,3
order by 2 desc 
limit 3;


select g.genre, COUNT(g.movie_id) AS movie_count
	from genre AS g
	inner join ratings AS r
	on g.movie_id = r.movie_id
	where avg_rating > 8
    group by genre
    order by movie_count
    limit 3;
    
------------------------------------------------------------------------------------
# Q20. Who are the top two actors whose movies have a median rating >= 8?

select distinct name as actor_name, median_rating, count(a.movie_id) as movie_count from role_mapping a
join ratings b on a.movie_id = b.movie_id
join names c on a.name_id = c.id 
where median_rating >= 8 and category = 'actor'
group by 1,2
order by movie_count desc
limit 2;
------------------------------------------------------------------------------------
select * from role_mapping;
# Q21. Which are the top three production houses based on the number of votes received by their movies?
select production_company as production_houses, sum(total_votes) as movie_votes 
from movies a
join ratings b on a.id = b.movie_id
group by 1
order by movie_votes desc
limit 3;
               # OR
select production_company,
sum(total_votes)as vote_count,
rank() over(order by sum(total_votes)desc)as prod_comp_rank
from movies as mov
join ratings as rat
on rat.movie_id=mov.id
group by production_company
limit 3;
-----------------------------------------------------------------------------------------------
# Q22. Rank actors with movies released in India based on their average ratings. Which actor is at the top of the list?
# Note: The actor should have acted in at least five Indian movies. 
select name as actore_name, total_votes,
count(a.id) as movie_count,
round(sum(avg_rating*total_votes)/sum(total_votes),2) as actor_avg_rating,
rank() over(partition by avg_rating order by avg_rating) as actors_rank 
from movies a
join ratings b on a.id = b.movie_id 
join role_mapping c on a.id = c.movie_id
join names d on c.name_id = d.id
where country like 'India' and category = "actor"
group by 1,2
having count(a.id) >= 5;

select name as actors_name, avg_rating, count(r.movie_id),
rank() over(order by avg_rating desc) as actor_rank
from movies m 
join ratings r on m.id = r.movie_id
join role_mapping rm on m.id = rm.movie_id
join names n on rm.name_id = n.id
where country ='India' and category = 'actor'
group by 1,2
#having count(r.movie_id) >= 5
limit 1;
-----------------------------------------------------------------------------------------------------
# Q23.Find out the top five actresses in Hindi movies released in India based on their average ratings? 
# Note: The actresses should have acted in at least three Indian movies.

select name as actress_name, avg_rating, country, count(m.id) from movies m
join ratings r ON m.id = r.movie_id 
join role_mapping rm ON m.id = rm.movie_id
join names n ON rm.name_id = n.id
where country = 'India' and category = 'actress'
and languages='Hindi'
group by 1,2,3
#having count(m.id) >= 3
order by 2 desc
limit 5 ;
----------------------------------------------------------------------------------
/* Q24. Select thriller movies as per avg rating and classify them in the following category: 

			Rating > 8: Superhit movies
			Rating between 7 and 8: Hit movies
			Rating between 5 and 7: One-time-watch movies
			Rating < 5: Flop movies
*/
select Title as Movie_name, avg_rating ,
case 
    when avg_rating > 8 then 'superhit movies' 
    when avg_rating <=8 and avg_rating >= 7 then 'Hit movies' 
    when avg_rating < 7 and avg_rating >=5 then 'one_time_watch movies'
    else 'Flop_movies' end as movie_category   
from movies m 
join genre g ON m.id = g.movie_id
join ratings r ON m.id = r.movie_id
where genre='Thriller';
#order by 2 desc;
-------------------------------------------------------------------------------
#Q25. What is the genre-wise running total and moving average of the average movie duration? 
select genre,
avg(duration) as avg_duration,
sum(round(avg(duration),2)) over(order by genre) as running_total_duration,
avg(round(avg(duration),2)) over(order by genre) as moving_avg_duration
from movies m
join genre g on m.id=g.movie_id
group by 1
order by genre;
-----------------------------------------------------------------------------------------------
#Q26. Which are the five highest-grossing movies of each year that belong to the top three genres? 

with top_three_genre as

(select genre, count(movie_id) as number_of_movie
from genre as g
join movies m on g.movie_id=m.id
group by genre 
order by count(movie_id) desc
limit 3),
top_5 as 
(select genre, year, title as movie_name, worlwide_gross_income,
dense_rank() over(partition by year order by worlwide_gross_income desc) as movie_rank        
from movies as m 
inner join genre as g on m.id= g.movie_id
where genre in (select genre from top_three_genre)
)
select *
from top_5
where movie_rank<=5;
---------------------------------------------------------------------------------------------------------------------
# Q27.  Which are the top two production houses that have produced the highest number of hits (median rating >= 8) among multilingual movies?

select production_company, count(m.id) as movie_count,
row_number() over(order by count(id) desc) as prod_comp_rank 
from movies m
join ratings r on m.id=r.movie_id
where median_rating>=8 and production_company is not null and position(',' in languages)>0
group by production_company
limit 2;
-------------------------------------------------------------------------------------------------------
# 28.Who are the top 3 actresses based on number of Super Hit movies (average rating >8) in drama genre?

with actress_summary as
(select n.name as actress_name, sum(total_votes) as total_votes, count(r.movie_id) as movie_count,
round(Sum(avg_rating*total_votes)/Sum(total_votes),2) as actress_avg_rating
from movies  as m
inner join ratings  as r on m.id=r.movie_id
inner join role_mapping as rm on  m.id = rm.movie_id
inner join names as n on rm.name_id = n.id
inner join genre as g on g.movie_id = m.id
where category = 'actress' and avg_rating>8 and genre = "Drama"
group by name )
select  *,
Rank() over(order by movie_count desc) as actress_rank
from actress_summary 
limit 3;